<script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script type='text/javascript' src='/js/jquery.simplemodal-1.4.4.js'></script>
<link type='text/css' href='/css/modal.css' rel='stylesheet' media='screen' />

<style type='text/css'>
  ul { list-style: none; }
  #recordingslist audio { display: block; margin-bottom: 10px; }
  #please-wait-modal-content { display: none; }
  #postrecordingdiv { display: none; }
  #audio-intro { display: none; }
  textarea { width: 100%; }
</style>

<h2>Record audio: "<%= @current_audio_name %>"</h2>
<p><%= @current_audio_description %></p>
<h6>Example script (you can edit!)</h6>
<textarea><%= @current_audio_example %></textarea>
<br><br>

<div id="prerecordingdiv">
  <p id="recordmessage">
    Press record to start recording.
  </p>
  <button id="recordButton" onclick="startRecording(this);" disabled>record</button>
  <button class="button-prominent" onclick="stopRecording(this);" disabled>stop</button>
</div>

<div id="postrecordingdiv">
  <div id="recordingslist"></div>
  <button id="uploadButton" onclick="uploadAudio(this);" disabled>upload</button>
  <button class="button-prominent" id="rerecordButton" onclick="location.reload();" disabled>re-record</button>
</div>

<div id="please-wait-modal-content">
  Thanks! Please wait while your audio is processed...
  <br>
</div>

<div id="audio-intro">
  <p>Great! Now we're going to record audio files for the phone survey.</p>
  <br>
  <p>Look at the top of your window:</p>
  <p>For each recording page, you will need to let the browser have access to your microphone by clicking "<strong>Allow</strong>", "<strong>Share selected device</strong>", or a similar button.</p>
</div>

<script>
function __log(e, data) {
  console.log(e);
}

var audio_context;
var recorder;

function startUserMedia(stream) {
  var input = audio_context.createMediaStreamSource(stream);
  __log('Media stream created.');

  var zeroGain = audio_context.createGain();
  zeroGain.gain.value = 0;
  input.connect(zeroGain);
  zeroGain.connect(audio_context.destination);
  __log('Input connected to muted gain node connected to audio context destination.');

  recordButton = document.getElementById("recordButton");
  recordButton.disabled = false;

  recorder = new Recorder(input);
  __log('Recorder initialised.');
}

function startRecording(button) {
  recorder && recorder.record();
  button.disabled = true;
  button.nextElementSibling.disabled = false;
  __log('Recording...');
}

function stopRecording(button) {
  recorder && recorder.stop();
  button.disabled = true;
  button.previousElementSibling.disabled = true;
  uploadButton = document.getElementById("uploadButton");
  uploadButton.disabled = false;
  rerecordButton = document.getElementById("rerecordButton");
  rerecordButton.disabled = false;
  prerecordingdiv = document.getElementById("prerecordingdiv");
  prerecordingdiv.style.display = 'none';
  postrecordingdiv = document.getElementById("postrecordingdiv");
  postrecordingdiv.style.display = 'inline';
  __log('Stopped recording.');

  createPlayer();

/*
*/

  //recorder.clear();
}

function uploadAudio(e) {
  $('#please-wait-modal-content').modal({
    overlayClose: true
  });
  recorder && recorder.exportWAV(function(blob) {
    console.log("sending data");
    console.log(blob);
    var fd = new FormData();
    fd.append('fname', 'myaudio.wav');
    fd.append('data', blob);
    $.ajax({
      type: "POST",
      url: "/<%= @user_token %>/audio/<%= @current_audio_name.gsub(" ", "-") %>",
      data: fd,
      processData: false,
      contentType: false
      }).done(function(response) {
        console.log(response);
        //alert("all done!");
        done_content = "<br>Done! Click next below to continue.<br><a href=\"<%= @next_link %>\" class=\"button\">Next</a>";
        $('#please-wait-modal-content').append(done_content);
      });
  });
}

function createPlayer() {
  recorder && recorder.exportWAV(function(blob) {
    var url = URL.createObjectURL(blob);
    var au = document.createElement('audio');

    au.controls = true;
    au.src = url;
    recordingslist.innerHTML = '';
    recordingslist.appendChild(au);
  });
}

window.onload = function init() {
  <% if @current_audio_name == "welcome" %>
    $('#audio-intro').modal({
      overlayClose: true
    });
  <% end %>
  try {
    // webkit shim
    window.AudioContext = window.AudioContext || window.webkitAudioContext;
    navigator.getUserMedia = (navigator.getUserMedia ||
      navigator.webkitGetUserMedia ||
      navigator.mozGetUserMedia ||
      navigator.msGetUserMedia);
    window.URL = window.URL || window.webkitURL;

    audio_context = new AudioContext;
    __log('Audio context set up.');
    __log('navigator.getUserMedia ' + (navigator.getUserMedia ? 'available.' : 'not present!'));
  } catch (e) {
    alert('No web audio support in this browser!');
  }

  navigator.getUserMedia({audio: true}, startUserMedia, function(e) {
    __log('No live audio input: ' + e);
  });
};
</script>

<script src="/js/recorder.js"></script>

